// <auto-generated />
using System;
using Matrix.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Matrix.Migrations
{
    [DbContext(typeof(MatrixDBContext))]
    partial class MatrixDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Matrix.Entity.Customer", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerNumber"));

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.HasIndex("CustomerNumber")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Matrix.Entity.History", b =>
                {
                    b.Property<Guid>("HistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<Guid>("SalesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("HistoryID");

                    b.HasIndex("SalesId");

                    b.ToTable("History");
                });

            modelBuilder.Entity("Matrix.Entity.ItemGroup", b =>
                {
                    b.Property<Guid>("ItemGoupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("ItemGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SourcingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("ItemGoupId");

                    b.HasIndex("SourcingId");

                    b.ToTable("ItemGroups");
                });

            modelBuilder.Entity("Matrix.Entity.RegionalSaleDirector", b =>
                {
                    b.Property<Guid>("RegionalSaleDirectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("RegionalSaleDirectorEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionalSaleDirectorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("RegionalSaleDirectorId");

                    b.ToTable("RegionalSaleDirectors");
                });

            modelBuilder.Entity("Matrix.Entity.RepeatItem", b =>
                {
                    b.Property<Guid>("RepeatItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("CurrentItemNumber")
                        .HasColumnType("int");

                    b.Property<string>("Dimensions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstimatedAnnualUsage")
                        .HasColumnType("int");

                    b.Property<int>("EstimatedCustomerSpend")
                        .HasColumnType("int");

                    b.Property<string>("FullSkidDimensions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCheckd")
                        .HasColumnType("bit");

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ItemGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<string>("LeadTIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOQ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MinQty")
                        .HasColumnType("int");

                    b.Property<int>("OrderMultiple")
                        .HasColumnType("int");

                    b.Property<string>("PackagingAndQtyPallet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PalletQTY")
                        .HasColumnType("int");

                    b.Property<int>("PalletSize")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("PriceUnit")
                        .HasColumnType("int");

                    b.Property<int>("QTY1")
                        .HasColumnType("int");

                    b.Property<int>("QTY2")
                        .HasColumnType("int");

                    b.Property<int>("QTY3")
                        .HasColumnType("int");

                    b.Property<Guid>("SalesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SetupCharge")
                        .HasColumnType("int");

                    b.Property<int>("UOMType1")
                        .HasColumnType("int");

                    b.Property<int>("UOMType2")
                        .HasColumnType("int");

                    b.Property<int>("UOMType3")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("RepeatItemId");

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("SalesId");

                    b.ToTable("RepeatItems");
                });

            modelBuilder.Entity("Matrix.Entity.Sales", b =>
                {
                    b.Property<Guid>("SalesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryOfOrigin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("FobPoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreightTerms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HTSCode")
                        .HasColumnType("int");

                    b.Property<int>("QuoteNumber")
                        .HasColumnType("int");

                    b.Property<string>("RFQNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RFQStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("RegionalSaleDirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SaleRepId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SalesRepId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SourcingNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SuggestedSalesPrice")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("SalesId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("QuoteNumber")
                        .IsUnique();

                    b.HasIndex("RegionalSaleDirectorId");

                    b.HasIndex("SalesRepId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("Matrix.Entity.SalesRep", b =>
                {
                    b.Property<Guid>("SalesRepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<Guid>("RegionalSaleDirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SaleRepEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaleRepName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("SalesRepId");

                    b.HasIndex("RegionalSaleDirectorId");

                    b.ToTable("SalesReps");
                });

            modelBuilder.Entity("Matrix.Entity.Sourcing", b =>
                {
                    b.Property<Guid>("SourcingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("SourcingEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourcingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("SourcingID");

                    b.ToTable("Sourcings");
                });

            modelBuilder.Entity("Matrix.Entity.History", b =>
                {
                    b.HasOne("Matrix.Entity.Sales", "Sales")
                        .WithMany()
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("Matrix.Entity.ItemGroup", b =>
                {
                    b.HasOne("Matrix.Entity.Sourcing", "Sourcing")
                        .WithMany()
                        .HasForeignKey("SourcingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sourcing");
                });

            modelBuilder.Entity("Matrix.Entity.RepeatItem", b =>
                {
                    b.HasOne("Matrix.Entity.ItemGroup", "ItemGroup")
                        .WithMany()
                        .HasForeignKey("ItemGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Matrix.Entity.Sales", "Sales")
                        .WithMany()
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemGroup");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("Matrix.Entity.Sales", b =>
                {
                    b.HasOne("Matrix.Entity.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Matrix.Entity.RegionalSaleDirector", "RegionalSaleDirector")
                        .WithMany()
                        .HasForeignKey("RegionalSaleDirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Matrix.Entity.SalesRep", "SalesRep")
                        .WithMany()
                        .HasForeignKey("SalesRepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("RegionalSaleDirector");

                    b.Navigation("SalesRep");
                });

            modelBuilder.Entity("Matrix.Entity.SalesRep", b =>
                {
                    b.HasOne("Matrix.Entity.RegionalSaleDirector", "RegionalSaleDirector")
                        .WithMany()
                        .HasForeignKey("RegionalSaleDirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegionalSaleDirector");
                });
#pragma warning restore 612, 618
        }
    }
}
